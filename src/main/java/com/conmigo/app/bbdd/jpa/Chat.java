package com.conmigo.app.bbdd.jpa;
// Generated Apr 19, 2018 9:14:36 PM by Hibernate Tools 5.2.8.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Chat generated by hbm2java
 */
@Entity
@Table(name = "chat", catalog = "conmigodb")
public class Chat extends GenericEntity<Long> {
    private static final long serialVersionUID = 1L;
    private Long id;
    private Event event;
    private User userBySender;
    private User userByReceiver;
    private String text;
    private LocalDateTime date;

    public Chat() {
    }

    public Chat(final Event event, final User userBySender, final User userByReceiver, final long createdBy,
            final LocalDateTime createdDate) {
        this.event = event;
        this.userBySender = userBySender;
        this.userByReceiver = userByReceiver;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
    }

    public Chat(final Event event, final User userBySender, final User userByReceiver, final String text,
            final LocalDateTime date, final long createdBy, final LocalDateTime createdDate, final Long lastModifiedBy,
            final LocalDateTime lastModifiedDate, final Boolean enable) {
        this.event = event;
        this.userBySender = userBySender;
        this.userByReceiver = userByReceiver;
        this.text = text;
        this.date = date;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDate = lastModifiedDate;
        this.enable = enable;
    }

    @Override
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return id;
    }

    @Override
    public void setId(final Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EVENT", nullable = false)
    public Event getEvent() {
        return event;
    }

    public void setEvent(final Event event) {
        this.event = event;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "SENDER", nullable = false)
    public User getUserBySender() {
        return userBySender;
    }

    public void setUserBySender(final User userBySender) {
        this.userBySender = userBySender;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RECEIVER", nullable = false)
    public User getUserByReceiver() {
        return userByReceiver;
    }

    public void setUserByReceiver(final User userByReceiver) {
        this.userByReceiver = userByReceiver;
    }

    @Column(name = "TEXT", length = 65535)
    public String getText() {
        return text;
    }

    public void setText(final String text) {
        this.text = text;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATE", length = 19)
    public LocalDateTime getDate() {
        return date;
    }

    public void setDate(final LocalDateTime date) {
        this.date = date;
    }

}
