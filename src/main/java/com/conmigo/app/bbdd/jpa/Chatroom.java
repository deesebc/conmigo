package com.conmigo.app.bbdd.jpa;
// Generated Apr 21, 2018 11:43:36 PM by Hibernate Tools 5.2.8.Final

import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Chatroom generated by hbm2java
 */
@Entity
@Table(name = "chatroom", catalog = "conmigodb")
public class Chatroom extends GenericEntity<Long> {

    private static final long serialVersionUID = 1L;
    private Long id;
    private Event event;
    private User userByComponent1;
    private User userByComponent2;
    private Set<Message> messages = new HashSet<>(0);

    public Chatroom() {
    }

    public Chatroom(final Long id, final Event event, final User userByComponent1, final User userByComponent2,
            final long createdBy, final LocalDateTime createdDate) {
        this.id = id;
        this.event = event;
        this.userByComponent1 = userByComponent1;
        this.userByComponent2 = userByComponent2;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
    }

    public Chatroom(final Long id, final Event event, final User userByComponent1, final User userByComponent2,
            final long createdBy, final LocalDateTime createdDate, final Long lastModifiedBy,
            final LocalDateTime lastModifiedDate, final Boolean enable, final Set<Message> messages) {
        this.id = id;
        this.event = event;
        this.userByComponent1 = userByComponent1;
        this.userByComponent2 = userByComponent2;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDate = lastModifiedDate;
        this.enable = enable;
        this.messages = messages;
    }

    @Override
    @Id
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return id;
    }

    @Override
    public void setId(final Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EVENT", nullable = false)
    public Event getEvent() {
        return event;
    }

    public void setEvent(final Event event) {
        this.event = event;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COMPONENT1", nullable = false)
    public User getUserByComponent1() {
        return userByComponent1;
    }

    public void setUserByComponent1(final User userByComponent1) {
        this.userByComponent1 = userByComponent1;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COMPONENT2", nullable = false)
    public User getUserByComponent2() {
        return userByComponent2;
    }

    public void setUserByComponent2(final User userByComponent2) {
        this.userByComponent2 = userByComponent2;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "chatroom")
    public Set<Message> getMessages() {
        return messages;
    }

    public void setMessages(final Set<Message> messages) {
        this.messages = messages;
    }

}
